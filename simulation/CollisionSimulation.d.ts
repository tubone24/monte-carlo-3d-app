import * as THREE from 'three';
import { CollisionStats, CollisionPhysicsParameters } from '../types';
export declare class CollisionSimulation {
    private scene;
    private objectP;
    private objectQ;
    private wall;
    private floor;
    private collisionCount;
    private massRatio;
    private isRunning;
    private collisionHistory;
    private expectedCollisions;
    private lastCollisionTime;
    private initialEnergy;
    private physicsParams;
    private readonly sphereRadius;
    private objectHeight;
    private velocityText;
    constructor(scene: THREE.Scene);
    initialize(massRatio?: number): void;
    private createWall;
    private addWallLabel;
    private createFloor;
    private createFloorGrid;
    private createObjects;
    private calculateInitialEnergy;
    private getCurrentEnergy;
    private addLabel;
    private createDebugDisplay;
    private updateDebugDisplay;
    update(deltaTime: number): void;
    private updatePhysics;
    private calculateAirProperties;
    private applyAirResistance;
    private calculateEffectiveRestitution;
    private applyFriction;
    private applyMagnusEffect;
    private handlePQCollision;
    private handleWallCollision;
    private handlePWallCollision;
    private createCollisionEffect;
    private updateCollisionEffects;
    start(): void;
    stop(): void;
    reset(): void;
    clear(): void;
    getStats(): CollisionStats;
    setMassRatio(ratio: number): void;
    getExpectedCollisions(): number;
    isComplete(): boolean;
    getPhysicsParams(): CollisionPhysicsParameters;
    setPhysicsParams(params: Partial<CollisionPhysicsParameters>): void;
    setPhysicsPreset(preset: 'ideal' | 'realistic' | 'extreme'): void;
}
//# sourceMappingURL=CollisionSimulation.d.ts.map